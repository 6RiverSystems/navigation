<class_libraries>
  <library path="liblayers">
    <class type="costmap_2d::InflationLayer"  base_class_type="costmap_2d::Layer">
      <description>Inflates obstacles to speed collision checking and to make robot prefer to stay away from obstacles.</description>
    </class>
    <class type="costmap_2d::ObstacleLayer"   base_class_type="costmap_2d::CostmapLayer">
      <description>Listens to laser scan and point cloud messages and marks and clears grid cells.</description>
    </class>
    <class type="costmap_2d::ObstructionLayer"   base_class_type="costmap_2d::CostmapLayer">
      <description>Listens to messages and marks and clears grid cells.  Inflates them as well.</description>
    </class>
    <class type="costmap_2d::StaticLayer"     base_class_type="costmap_2d::CostmapLayer">
      <description>Listens to OccupancyGrid messages and copies them in, like from map_server.</description>
    </class>
    <class type="costmap_2d::StaticLayerWithInflation"     base_class_type="costmap_2d::CostmapLayer">
      <description>Listens to OccupancyGrid messages and copies them in, like from map_server.  Also inflates obstacles.</description>
    </class>
    <class type="costmap_2d::VoronoiInflationLayer"     base_class_type="costmap_2d::Layer">
      <description>Inflates using a voronoi map.</description>
    </class>
    <class type="costmap_2d::VoxelLayer"     base_class_type="costmap_2d::CostmapLayer">
      <description>Similar to obstacle costmap, but uses 3D voxel grid to store data.</description>
    </class>
<<<<<<< HEAD
    <class type="costmap_2d::AisleBiasInflationLayer"     base_class_type="costmap_2d::Layer">
      <description>Inflates using a aisle bias map.</description>
    </class>
    <class type="costmap_2d::ShadowLayer"     base_class_type="costmap_2d::CostmapLayer">
      <description>Calculate shadows.</description>
    </class>    
=======
>>>>>>> 4dca4370b914bf8b13eb766c98a1137063826691
  </library>
</class_libraries>

