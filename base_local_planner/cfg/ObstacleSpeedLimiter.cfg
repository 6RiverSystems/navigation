#!/usr/bin/env python
# DWA Planner configuration

from dynamic_reconfigure.parameter_generator_catkin import ParameterGenerator, double_t, int_t, bool_t
gen = ParameterGenerator()

gen.add("half_angle", double_t, 0, "The half angle in which to consider obstructions for speed limits", 1.5, 0, 3.2)
gen.add("y_buffer", double_t, 0, "The minimum buffer in the robot's y axis to add for slowing down.", 0.3, 0, 1.0)
gen.add("x_buffer", double_t, 0, "The minimum buffer in the robot's x axis to add for slowing down.", 0.5, 0, 2.0)

gen.add("min_linear_velocity", double_t, 0, "The minimum desired linear velocity for the robot in m/s", 0.3, 0, 1.5)
gen.add("nominal_linear_velocity", double_t, 0, "The nominal desired oinear velocity for the robot in m/s", 1.0, 0, 1.5)

gen.add("min_range", double_t, 0, "The minimum range that obstacles effect the robot", 0.1, 0, 2.0)
gen.add("nominal_range_min", double_t, 0, "The maximum range that shadows effect the robot", 0.7, 0, 3.0)
gen.add("nominal_range_max", double_t, 0, "The maximum range that shadows effect the robot", 1.5, 0, 3.0)
gen.add("max_range", double_t, 0, "The maximum range that shadows effect the robot", 1.75, 0, 3.0)

gen.add("min_angular_velocity", double_t, 0, "The minimum desired x velocity for the robot in rad/s.", 0.6, 0, 2.0)
gen.add("min_angular_vel_effect_dist", double_t, 0, "The minimum range beyond the circumscribed radius to add for slowing down.", 0.2, 0, 2.0)
gen.add("max_angular_vel_effect_dist", double_t, 0, "The maximum range beyond the circumscribed radius to add for slowing down.", 0.5, 0, 2.0)


exit(gen.generate("base_local_planner", "base_local_planner", "ObstacleSpeedLimiter"))
