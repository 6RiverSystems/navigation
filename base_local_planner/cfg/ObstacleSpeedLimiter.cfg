#!/usr/bin/env python
# DWA Planner configuration

from dynamic_reconfigure.parameter_generator_catkin import ParameterGenerator, double_t, int_t, bool_t
gen = ParameterGenerator()

gen.add("half_angle", double_t, 0, "Only obstructions which are within +/- half_angle of the front of the chuck are considered for slow down. [rad]", 1.5, 0, 3.2)
gen.add("y_buffer", double_t, 0, "The minimum buffer in the robot's y axis to add for slowing down. [m].", 0.3, 0, 1.0)
gen.add("x_buffer", double_t, 0, "The minimum buffer in the robot's x axis to add for slowing down. [m]", 0.5, 0, 2.0)

gen.add("min_linear_velocity", double_t, 0, "The minimum desired linear velocity for the robot. [m/s]", 0.3, 0, 1.5)
gen.add("nominal_linear_velocity", double_t, 0, "The nominal desired linear velocity for the robot. [m/s]", 1.0, 0, 1.5)

gen.add("min_range", double_t, 0, "The minimum range that obstacles effect the robot. [m]", 0.1, 0, 2.0)
gen.add("nominal_range_min", double_t, 0, "The minimum range of obstacles to use the nominal velocity. [m]", 0.7, 0, 3.0)
gen.add("nominal_range_max", double_t, 0, "The maximum range of obstacles to use the nominal velocity. [m]", 1.5, 0, 3.0)
gen.add("max_range", double_t, 0, "The maximum range that obstacles effect the robot's velocity. [m]", 1.75, 0, 3.0)

gen.add("min_angular_velocity", double_t, 0, "The minimum desired angular velocity for the robot. [rad/s]", 0.6, 0, 2.0)
gen.add("min_angular_velocity_effect_distance", double_t, 0, "The minimum range beyond the circumscribed radius to add for slowing down. [m]", 0.2, 0, 2.0)
gen.add("max_angular_velocity_effect_distance", double_t, 0, "The maximum range beyond the circumscribed radius to add for slowing down. [m]", 0.5, 0, 2.0)
gen.add("enable_new_obstacle_curve", bool_t, 0, "Enable the new obstacle continuous curve", False)
gen.add("new_obstacle_curve", double_t, 0, "Curve shape for new obstacle curve: pow(distance, 1/(param))", 1.72, 0.0, 3.0)

exit(gen.generate("base_local_planner", "base_local_planner", "ObstacleSpeedLimiter"))
