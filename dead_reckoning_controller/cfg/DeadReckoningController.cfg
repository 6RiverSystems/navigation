#!/usr/bin/env python

from math import pi

from dynamic_reconfigure.parameter_generator_catkin import ParameterGenerator, double_t, int_t, bool_t, str_t

gen = ParameterGenerator()


gen.add("acc_lim_x", double_t, 0, "The acceleration limit of the robot in the x direction", 0.7, 0, 20.0)
gen.add("acc_lim_y", double_t, 0, "The acceleration limit of the robot in the y direction", 0, 0, 20.0)
gen.add("acc_lim_theta", double_t, 0, "The acceleration limit of the robot in the theta direction", 2.5, 0, 20.0)
gen.add("acc_lim_tip", double_t, 0, "The acceleration limit of the robot turning in place", 1.0, 0, 20.0)

gen.add("max_vel_x", double_t, 0, "The maximum x velocity for the robot in m/s", 0.20, 0, 20.0)
gen.add("min_vel_x", double_t, 0, "The minimum x velocity for the robot in m/s", 0.0, 0, 20.0)
gen.add("max_ang_z", double_t, 0, "The maximum angular z velocity for the robot in rad/s", 0.5, 0, 2.0)

gen.add("max_path_correction", double_t, 0, "The maximum path correction the robot can do in the y axis", 0.4, 0, 10.0)
gen.add("max_sweep_angle", double_t, 0, "The maximum angle the robot can approach the path vector", 1.04, 0, 3.14159)

gen.add("p_weight_angular", double_t, 0, "P Weight", 7, 0, 100)
gen.add("i_weight_angular", double_t, 0, "I Weight", 10, 0, 100)
gen.add("d_weight_angular", double_t, 0, "D Weight", 0.1, 0, 100)

gen.add("p_weight_linear", double_t, 0, "P Weight", 0.5, 0, 100)
gen.add("i_weight_linear", double_t, 0, "I Weight", 10, 0, 100)
gen.add("d_weight_linear", double_t, 0, "D Weight", 0.1, 0, 100)


exit(gen.generate("dead_reckoning_controller", "dead_reckoning_controller", "DeadReckoningController"))
